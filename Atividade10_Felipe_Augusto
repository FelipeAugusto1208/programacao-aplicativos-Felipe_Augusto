/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package atividade10_alexandre_henrich;
import java.util.Scanner;
import java.sql.SQLException;
import java.util.List;

/**
 *
 * @author Aluno
 */
public class Atividade10_Alexandre_Henrich {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws SQLException {
        // TODO code application logic here
        
        Scanner en = new Scanner (System.in);
        ConexaoDAO conexao = new ConexaoDAO();
        int opcao;
        int idCreate = 1;
        
        while (true) {
            
            System.out.println("=== Menu ===");
            System.out.println("1 - CREATE(Cadastra Nome) \n2 - READ(Listar) \n3 - UPDATE(Atualizar) \n4 - DELETE");
            System.out.println("Digite a opcao desejada: ");
            opcao = en.nextInt();
            en.nextLine();
            
            switch (opcao) {
                case 1:
                    System.out.print("Digite o nome do aluno: ");
                    String nomeCreate = en.nextLine();
                    Aluno alunoCreate = new Aluno(idCreate, nomeCreate);
                    conexao.cadastraAluno(alunoCreate);
                    System.out.println("Aluno cadastrado com sucesso!");
                    idCreate++;
                    break;
                    
                case 2:
                    List<Aluno> alunos = conexao.listarAlunos();
                    System.out.println("\n=== Lista de Alunos ===");
                    for (Aluno a : alunos) {
                        System.out.println("ID: " + a.getId() + " | Nome: " + a.getNome());
                    }
                    break;
                    
                case 3:
                    System.out.print("Digite o ID do aluno para atualizar: ");
                    int idUpdate = en.nextInt();
                    en.nextLine();
                    System.out.print("Digite o novo nome do aluno: ");
                    String nomeUpdate = en.nextLine();
                    Aluno alunoUpdate = new Aluno(idUpdate, nomeUpdate);
                    conexao.atualizarAluno(alunoUpdate);
                    System.out.println("Aluno atualizado com sucesso!");
                    break;
                    
                case 4:
                    System.out.print("Digite o ID do aluno para deletar: ");
                    int idDelete = en.nextInt();
                    en.nextLine();
                    conexao.deletarAluno(idDelete);
                    System.out.println("Aluno deletado com sucesso!");
                    break;
                    
                case 0:
                    System.out.println("Saindo...");
                    System.exit(0);
                    break;
                    
                default:
                    System.out.println("Opção inválida! Tente novamente.");
                    break;
            }
        }
    }
    
}




/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package atividade10_alexandre_henrich;

/**
 *
 * @author Aluno
 */
public class Aluno {
    private int id;
    private String nome;

public Aluno(int id,String nome){
    this.id = id;
    this.nome =nome;
}    

public Aluno(){
    
}

public int getId(){
    return id;
}
public String getNome(){
    return nome;
}
public void setId(int id){
    this.id = id;
}
public void setNome(String nome){
    this.nome = nome;
}

}




/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package atividade10_alexandre_henrich;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.sql.DriverManager;
/**
 *
 * @author Aluno
 */
public class ConexaoDAO {
    
    private Connection connection;
    
     private Connection getConnection()throws SQLException{
        String url = "jdbc:mysql://localhost:3306/aluno";  //jdbc:mysql://localhost:3306/?user=root
        String usuario = "root";
        String senha = "root";
        return DriverManager.getConnection(url, usuario, senha);
    }

    public ConexaoDAO() throws SQLException {
        try {
            this.connection = getConnection();
            System.out.println("Conexão com o banco de dados bem-sucedida!");
        } catch (SQLException e) {
            System.out.println("Erro ao conectar ao banco de dados: " + e.getMessage());
            throw e;
        }
    }
    
    
   
    public void cadastraAluno(Aluno aluno)throws SQLException{
        String sql = "INSERT INTO alunos(id, nome) VALUES (?, ?)";
        try(Connection conn = getConnection();
            PreparedStatement ps = conn.prepareStatement(sql)){
           ps.setInt(1, aluno.getId());
           ps.setString(2, aluno.getNome());
           ps.executeUpdate();
        }
    }
    
    public List<Aluno>listarAlunos()throws SQLException{
        List<Aluno> alunos = new ArrayList<>();
        String sql = "SELECT id, nome FROM alunos";
        try(Connection conn = getConnection();
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery()){
            while (rs.next()){
                Aluno aluno = new Aluno (rs.getInt("id"), rs.getString("nome"));
                alunos.add(aluno);
            }
        }
        return alunos;
    }
    
    public void atualizarAluno(Aluno aluno) throws SQLException{
        String sql = "UPDATE alunos SET nome = ? WHERE id = ?";
        try(Connection conn = getConnection();
            PreparedStatement ps = conn.prepareStatement(sql)){
           ps.setString(1, aluno.getNome());
           ps.setInt(2, aluno.getId());

           ps.executeUpdate(); 
        }
    }
    public void deletarAluno(int id) throws SQLException {
    String sql = "DELETE FROM alunos WHERE id = ?";
    try (Connection conn = getConnection();
         PreparedStatement ps = conn.prepareStatement(sql)) {
        
        ps.setInt(1, id);
        ps.executeUpdate();
    }
    }
}



mysql

create database aluno;
use aluno;
create table alunos(
id int primary key auto_increment,
nome varchar(100) not null
);
insert into alunos (nome)
values ("Alexandre");
